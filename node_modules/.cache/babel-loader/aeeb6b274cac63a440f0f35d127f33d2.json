{"ast":null,"code":"var _jsxFileName = \"/Users/p/Desktop/react/tic-tac-toe/src/components/Table.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table({\n  click\n}) {\n  // const [history,setHistory] = useState([]) ;\n  // const [field,setField] = useState(Array(9).fill(null)) ;\n  // const [turn,setTurn] = useState(0) ;\n  // let win_condition = [\n  //                         [0,1,2],\n  //                         [3,4,5],\n  //                         [6,7,8],\n  //                         [0,3,6],\n  //                         [1,4,7],\n  //                         [2,5,8],\n  //                         [0,4,8],\n  //                         [2,4,6]\n  //                     ]\n  // // debug array\n  // console.log(history) ;\n  // console.log(field) ;\n  // const playerClick = (position) => {\n  //     // alert(position) ; Check position value\n  //     // setState([...previousArray,newValue]) ; setState with array\n  //     if(field[position] == null)\n  //     {\n  //         if(turn == 0) // X player turn\n  //         {\n  //             field[position] = 'X' ;\n  //             setField([...field]) ;\n  //             setHistory([...history, {pos : position, player:'X'}]) ; // Set State History\n  //             winner() ;\n  //             setTurn(1) ;\n  //         }\n  //         else if(turn == 1) // O player turn\n  //         {\n  //             field[position] = 'O'\n  //             setField([...field]) ;\n  //             setHistory([...history, {pos : position, player: 'O'}]) ; // Set State History\n  //             winner() ;\n  //             setTurn(0) ;\n  //         }\n  //     }    \n  // }\n  // const winner = () => {\n  //     for(let i=0 ; i<=win_condition.length-1 ; i++)\n  //     {\n  //         let [x,y,z] = win_condition[i] ;\n  //         if(field[x] != null && field[y] != null && field[z] != null && field[x] == field[y]  &&  field[x] == field[z])\n  //         {\n  //             turn == 0 ? alert('WINNER : X') : alert ('WINNER : O') ;\n  //             setField([]) ;\n  //             console.log(field[x],field[y],field[z]) ;\n  //         }\n  //     }\n  // }\n  const playButton = position => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"play-btn\",\n      onClick: () => click(position),\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-box\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(0), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(1), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(2), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(3), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(4), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(5), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(6), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(7), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", playButton(8), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/p/Desktop/react/tic-tac-toe/src/components/Table.js"],"names":["React","useState","Table","click","playButton","position"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,UAAU,GAAIC,QAAD,IAAc;AAC9B,wBAAQ;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,MAAMF,KAAK,CAACE,QAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAEF,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,6BACA;AAAA,gCACI;AAAA,kCACI;AAAA,4BAAMD,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,4BAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,4BAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,kCACI;AAAA,4BAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,4BAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,4BAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAWI;AAAA,kCACI;AAAA,4BAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,4BAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,4BAAMA,UAAU,CAAC,CAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;KAvFQF,K;AA2FT,eAAeA,KAAf","sourcesContent":["import React,{ useState } from 'react' ;\n\nfunction Table({click})\n{   \n    // const [history,setHistory] = useState([]) ;\n    // const [field,setField] = useState(Array(9).fill(null)) ;\n    // const [turn,setTurn] = useState(0) ;\n    // let win_condition = [\n    //                         [0,1,2],\n    //                         [3,4,5],\n    //                         [6,7,8],\n    //                         [0,3,6],\n    //                         [1,4,7],\n    //                         [2,5,8],\n    //                         [0,4,8],\n    //                         [2,4,6]\n    //                     ]\n    \n    // // debug array\n    // console.log(history) ;\n    // console.log(field) ;\n\n    // const playerClick = (position) => {\n    //     // alert(position) ; Check position value\n    //     // setState([...previousArray,newValue]) ; setState with array\n        \n    //     if(field[position] == null)\n    //     {\n    //         if(turn == 0) // X player turn\n    //         {\n    //             field[position] = 'X' ;\n    //             setField([...field]) ;\n    //             setHistory([...history, {pos : position, player:'X'}]) ; // Set State History\n    //             winner() ;\n    //             setTurn(1) ;\n    //         }\n    //         else if(turn == 1) // O player turn\n    //         {\n    //             field[position] = 'O'\n    //             setField([...field]) ;\n    //             setHistory([...history, {pos : position, player: 'O'}]) ; // Set State History\n    //             winner() ;\n    //             setTurn(0) ;\n    //         }\n    //     }    \n    // }\n\n    // const winner = () => {\n    //     for(let i=0 ; i<=win_condition.length-1 ; i++)\n    //     {\n    //         let [x,y,z] = win_condition[i] ;\n            \n    //         if(field[x] != null && field[y] != null && field[z] != null && field[x] == field[y]  &&  field[x] == field[z])\n    //         {\n    //             turn == 0 ? alert('WINNER : X') : alert ('WINNER : O') ;\n    //             setField([]) ;\n    //             console.log(field[x],field[y],field[z]) ;\n    //         }\n    //     }\n    // }\n    \n    const playButton = (position) => {\n       return( <button className=\"play-btn\" onClick={() => click(position)}> </button>\n       )\n    }\n\n    return(\n        <div className=\"table-box\">\n            <table className=\"table\">\n            <tbody>\n                <tr>    \n                    <td> {playButton(0)} </td>\n                    <td> {playButton(1)} </td>\n                    <td> {playButton(2)} </td>  \n                </tr>\n                <tr>\n                    <td> {playButton(3)} </td>\n                    <td> {playButton(4)} </td>\n                    <td> {playButton(5)} </td>\n                </tr>\n                <tr> \n                    <td> {playButton(6)} </td>\n                    <td> {playButton(7)} </td>\n                    <td> {playButton(8)} </td>\n                </tr>\n            </tbody>\n            </table>\n        </div>\n    )\n} \n\n\n\nexport default Table ;"]},"metadata":{},"sourceType":"module"}